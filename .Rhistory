abline(lmfit_Dep.N)
View(Data.noNA)
# dept v. average for C_avg
plot(Data.noNA$dep, Data.noNA$C_avg)
lmfit_Dep.C <- lm(C_avg ~ dep, data = Data.noNA)
summary(lmfit_Dep.C)
abline(lmfit_Dep.C)
plot(Data.noNA$dep, Data.noNA$N_avg)
lmfit_Dep.N <- lm(N_avg ~ dep, data = Data.noNA)
summary(lmfit_Dep.N)
abline(lmfit_Dep.N)
plot(Data.noNA$dep, Data.noNA$P_avg)
lmfit_Dep.P <- lm(P_avg ~ dep, data = Data.noNA)
summary(lmfit_Dep.P)
abline(lmfit_Dep.P)
# dept v. average for C_avg
plot(Data.noNA$dep, Data.noNA$C_avg)
lmfit_Dep.C <- lm(C_avg ~ dep, data = Data.noNA)
summary(lmfit_Dep.C)
abline(lmfit_Dep.C)
plot(Data.noNA$dep, Data.noNA$N_avg)
lmfit_Dep.N <- lm(N_avg ~ dep, data = Data.noNA)
summary(lmfit_Dep.N)
abline(lmfit_Dep.N)
plot(Data.noNA$dep, Data.noNA$P_avg)
lmfit_Dep.P <- lm(P_avg ~ dep, data = Data.noNA)
summary(lmfit_Dep.P)
abline(lmfit_Dep.P)
plot(Data.noNA$dep, Data.noNA$M_avg)
lmfit_Dep.M <- lm(M_avg ~ dep, data = Data.noNA)
summary(lmfit_Dep.M)
abline(lmfit_Dep.M)
rm(list=ls(all=TRUE))  #Housekeeping: clear out old files
options(warn = -1)
knitr::opts_chunk$set(echo = T, fig.height=6, fig.width=8, warning = F, message = F)
bats_flux <- read.csv("bats_flux.csv")
delete.na <- function(DF, n=0) {
DF[rowSums(is.na(DF)) <= n,]
} #Function that takes rows out that contains NAs
bats_flux.noNA <- delete.na(bats_flux) # Take out rows containing NAs
Data <- subset(bats_flux,select = c("cr","dep","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2","M_avg","C_avg","N_avg","P_avg"))
Data.noNA <- delete.na(Data)
# separate each flux into its own dataframe
# delete rows that contain NAs
C_flux.data <- delete.na(subset(Data,select = c("cr","dep","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2","C_avg")))
N_flux.data <- delete.na(subset(Data,select = c("cr","dep","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2","N_avg")))
P_flux.data <- delete.na(subset(Data,select = c("cr","dep","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2","P_avg")))
M_flux.data <- delete.na(subset(Data,select = c("cr","dep","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2","M_avg")))
# Subset each depth and rename columns
library(plyr)
C_flux.depth.150 <- subset(C_flux.data, dep == 150)
C_flux.depth.150 <- rename(C_flux.depth.150,c("dep.150" = "dep"))
C_flux.depth.150 <- rename(C_flux.depth.150, c("C_avg.150" = "C_avg" ))
C_flux.depth.200 <- subset(C_flux.data, dep == 200)
C_flux.depth.200 <- rename(C_flux.depth.200, c("dep.200"="dep"))
C_flux.depth.200 <- rename(C_flux.depth.200, c("C_avg.200" ="C_avg"))
C_flux.depth.300 <- subset(C_flux.data, dep == 300)
C_flux.depth.300 <- rename(C_flux.depth.300, c("dep.300"="dep"))
C_flux.depth.300 <- rename(C_flux.depth.300, c("C_avg.300" ="C_avg"))
C_flux.depth.400 <- subset(C_flux.data, dep == 400)
C_flux.depth.400 <- rename(C_flux.depth.400, c("dep.400"="dep"))
C_flux.depth.400 <- rename(C_flux.depth.400, c("C_avg.400" ="C_avg"))
N_flux.depth.150 <- subset(N_flux.data, dep == 150)
N_flux.depth.150 <- rename(N_flux.depth.150, c("dep.150"="dep"))
N_flux.depth.150 <- rename(N_flux.depth.150, c("N_avg.150" ="N_avg"))
N_flux.depth.200 <- subset(N_flux.data, dep == 200)
N_flux.depth.200 <- rename(N_flux.depth.200, c("dep.200"="dep"))
N_flux.depth.200 <- rename(N_flux.depth.200, c("N_avg.200" ="N_avg"))
N_flux.depth.300 <- subset(N_flux.data, dep == 300)
N_flux.depth.300 <- rename(N_flux.depth.300, c("dep.300"="dep"))
N_flux.depth.300 <- rename(N_flux.depth.300, c("N_avg.300" ="N_avg"))
N_flux.depth.400 <- subset(N_flux.data, dep == 400)
N_flux.depth.400 <- rename(N_flux.depth.400, c("dep.400"="dep"))
N_flux.depth.400 <- rename(N_flux.depth.400, c("N_avg.400" ="N_avg"))
P_flux.depth.150 <- subset(P_flux.data, dep == 150)
P_flux.depth.150 <- rename(P_flux.depth.150, c("dep.150"="dep"))
P_flux.depth.150 <- rename(P_flux.depth.150, c("P_avg.150" ="P_avg"))
P_flux.depth.200 <- subset(P_flux.data, dep == 200)
P_flux.depth.200 <- rename(P_flux.depth.200, c("dep.200"="dep"))
P_flux.depth.200 <- rename(P_flux.depth.200, c("P_avg.200" ="P_avg"))
P_flux.depth.300 <- subset(P_flux.data, dep == 300)
P_flux.depth.300 <- rename(P_flux.depth.300, c("dep.300"="dep"))
P_flux.depth.300 <- rename(P_flux.depth.300, c("P_avg.300" ="P_avg"))
P_flux.depth.400 <- subset(P_flux.data, dep == 400)
P_flux.depth.400 <- rename(P_flux.depth.400, c("dep.400"="dep"))
P_flux.depth.400 <- rename(P_flux.depth.400, c("P_avg.400" ="P_avg"))
M_flux.depth.150 <- subset(M_flux.data, dep == 150)
M_flux.depth.150 <- rename(M_flux.depth.150, c("dep.150"="dep"))
M_flux.depth.150 <- rename(M_flux.depth.150, c("M_avg.150" ="M_avg"))
M_flux.depth.200 <- subset(M_flux.data, dep == 200)
M_flux.depth.200 <- rename(M_flux.depth.200, c("dep.200"="dep"))
M_flux.depth.200 <- rename(M_flux.depth.200, c("M_avg.200" ="M_avg"))
M_flux.depth.300 <- subset(M_flux.data, dep == 300)
M_flux.depth.300 <- rename(M_flux.depth.300, c("dep.300"="dep"))
M_flux.depth.300 <- rename(M_flux.depth.300, c("M_avg.300" ="M_avg"))
M_flux.depth.400 <- subset(M_flux.data, dep == 400)
M_flux.depth.400 <- rename(M_flux.depth.400, c("dep.400"="dep"))
M_flux.depth.400 <- rename(M_flux.depth.400, c("M_avg.400" ="M_avg"))
# Checking for normaility and no outliers in Carbon Flux
hist((C_flux.depth.150$C_avg.150), breaks = "FD")
hist((C_flux.depth.200$C_avg.200), breaks = "FD")
hist((C_flux.depth.300$C_avg.300), breaks = "FD")
hist((C_flux.depth.400$C_avg.400), breaks = "FD")
# using natural log to Transform the data
hist(log(C_flux.depth.150$C_avg.150))
hist(log(C_flux.depth.200$C_avg.200))
hist(log(C_flux.depth.300$C_avg.300))
hist(log(C_flux.depth.400$C_avg.400))
# Checking for outliers
boxplot(log(C_flux.depth.150$C_avg.150))
boxplot(log(C_flux.depth.200$C_avg.200))
boxplot(log(C_flux.depth.300$C_avg.300))
boxplot(log(C_flux.depth.400$C_avg.400))
# Checking for normaility and no outliers in Nitrogen Flux
hist((N_flux.depth.150$N_avg.150), breaks = "FD")
hist((N_flux.depth.200$N_avg.200), breaks = "FD")
hist((N_flux.depth.300$N_avg.300), breaks = "FD")
hist((N_flux.depth.400$N_avg.400), breaks = "FD")
# using natural log to Transform the data
hist(log(N_flux.depth.150$N_avg.150))
hist(log(N_flux.depth.200$N_avg.200))
hist(log(N_flux.depth.300$N_avg.300))
hist(log(N_flux.depth.400$N_avg.400))
# Checking for outliers
boxplot(log(N_flux.depth.150$N_avg.150))
boxplot(log(N_flux.depth.200$N_avg.200))
boxplot(log(N_flux.depth.300$N_avg.300))
boxplot(log(N_flux.depth.400$N_avg.400))
# Checking for normaility and no outliers in Phosporous Flux
hist((P_flux.depth.150$P_avg.150), breaks = "FD")
hist((P_flux.depth.200$P_avg.200), breaks = "FD")
hist((P_flux.depth.300$P_avg.300), breaks = "FD")
# using natural log to Transform the data
hist(log(P_flux.depth.150$P_avg.150))
hist(log(P_flux.depth.200$P_avg.200))
hist(log(P_flux.depth.300$P_avg.300))
# Checking for outliers
boxplot(log(P_flux.depth.150$P_avg.150))
boxplot(log(P_flux.depth.200$P_avg.200))
boxplot(log(P_flux.depth.300$P_avg.300))
# Checking for normaility and no outliers in Mass Flux
hist((M_flux.depth.150$M_avg.150), breaks = "FD")
hist((M_flux.depth.200$M_avg.200), breaks = "FD")
hist((M_flux.depth.300$M_avg.300), breaks = "FD")
hist((M_flux.depth.400$M_avg.400), breaks = "FD")
# using natural log to Transform the data
hist(log(M_flux.depth.150$M_avg.150))
hist(log(M_flux.depth.200$M_avg.200))
hist(log(M_flux.depth.300$M_avg.300))
hist(log(M_flux.depth.400$M_avg.400))
# Checking for outliers
boxplot(log(M_flux.depth.150$M_avg.150))
boxplot(log(M_flux.depth.200$M_avg.200))
boxplot(log(M_flux.depth.300$M_avg.300))
boxplot(log(M_flux.depth.400$M_avg.400))
C.depth.150.200 <- merge(C_flux.depth.150,C_flux.depth.200,by = c("cr","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2"))
t.test(log(C.depth.150.200$C_avg.150) ,log(C.depth.150.200$C_avg.200), alternative = "greater", paired = TRUE, var.equal = TRUE)
C.depth.200.300 <- merge(C_flux.depth.200,C_flux.depth.300,by = c("cr","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2"))
t.test(log(C.depth.200.300$C_avg.200) ,log(C.depth.200.300$C_avg.300), alternative = "greater", paired = TRUE, var.equal = TRUE)
N.depth.150.200 <- merge(N_flux.depth.150,N_flux.depth.200,by = c("cr","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2"))
t.test(log(N.depth.150.200$N_avg.150) ,log(N.depth.150.200$N_avg.200), alternative = "greater", paired = TRUE, var.equal = TRUE)
N.depth.200.300 <- merge(N_flux.depth.200,N_flux.depth.300,by = c("cr","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2"))
t.test(log(N.depth.200.300$N_avg.200) ,log(N.depth.200.300$N_avg.300), alternative = "greater", paired = TRUE, var.equal = TRUE)
P.depth.150.200 <- merge(P_flux.depth.150,P_flux.depth.200,by = c("cr","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2"))
t.test(log(P.depth.150.200$P_avg.150) ,log(P.depth.150.200$P_avg.200), alternative = "greater", paired = TRUE, var.equal = TRUE)
P.depth.200.300 <- merge(P_flux.depth.200,P_flux.depth.300,by = c("cr","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2"))
t.test(log(P.depth.200.300$P_avg.200) ,log(P.depth.200.300$P_avg.300), alternative = "greater", paired = TRUE, var.equal = TRUE)
M.depth.150.200 <- merge(M_flux.depth.150,M_flux.depth.200,by = c("cr","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2"))
t.test(log(M.depth.150.200$M_avg.150) ,log(M.depth.150.200$M_avg.200), alternative = "greater", paired = TRUE, var.equal = TRUE)
M.depth.200.300 <- merge(M_flux.depth.200,M_flux.depth.300,by = c("cr","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2"))
t.test(log(M.depth.200.300$M_avg.200) ,log(M.depth.200.300$M_avg.300), alternative = "greater", paired = TRUE, var.equal = TRUE)
# plotting each nutrient flux against mass flux
plot(Data.noNA) # we see some relationships between mass flux and the rest of the nutrient fluxes
plot(Data.noNA$C_avg,Data.noNA$M_avg) #good linearity, but clumping
lmfit_C.M <- lm(M_avg ~ C_avg, data = Data.noNA)
summary(lmfit_C.M)
abline(lmfit_C.M)
plot(Data.noNA$N_avg,Data.noNA$M_avg) # alright linearity, still clumping
lmfit_N.M <- lm(M_avg ~ N_avg, data = Data.noNA)
summary(lmfit_N.M)
abline(lmfit_N.M)
plot(Data.noNA$P_avg,Data.noNA$M_avg) # worse, still clumping
lmfit_P.M <- lm(M_avg ~ P_avg, data = Data.noNA)
summary(lmfit_P.M)
abline(lmfit_P.M)
resids <- resid( lmfit_C.M ) # extract epsilon_hats
fit <- fitted ( lmfit_C.M ) # extract y_hats
par(mfrow=c(1,2))
hist(resids, breaks=20)
qqnorm(resids)
qqline(resids) # add straight line from true normal
plot(resids, main="resid vs i")
abline(h=0) # mean of epsilon_hat
plot(x=fit, y=resids, main="resid vs y_hat")
abline(h=0)
resids <- resid( lmfit_N.M ) # extract epsilon_hats
fit <- fitted ( lmfit_N.M ) # extract y_hats
par(mfrow=c(1,2))
hist(resids, breaks=20)
qqnorm(resids)
qqline(resids) # add straight line from true normal
plot(resids, main="resid vs i")
abline(h=0) # mean of epsilon_hat
plot(x=fit, y=resids, main="resid vs y_hat")
abline(h=0)
resids <- resid( lmfit_P.M ) # extract epsilon_hats
fit <- fitted ( lmfit_P.M ) # extract y_hats
par(mfrow=c(1,2))
hist(resids, breaks=20)
qqnorm(resids)
qqline(resids) # add straight line from true normal
plot(resids, main="resid vs i")
abline(h=0) # mean of epsilon_hat
plot(x=fit, y=resids, main="resid vs y_hat")
abline(h=0)
flux <- Data.noNA$C_avg - Data.noNA$N_avg - Data.noNA$P_avg #combine the fluxes
lmfit.flux <- lm( M_avg ~ flux,
data=Data.noNA)
summary(lmfit.flux)
plot(flux,Data.noNA$M_avg)
abline(lmfit.flux)
resids <- resid( lmfit.flux ) # extract epsilon_hats
fit <- fitted ( lmfit.flux ) # extract y_hats
par(mfrow=c(1,2))
hist(resids, breaks=20)
qqnorm(resids)
qqline(resids) # add straight line from true normal
plot(resids, main="resid vs i")
abline(h=0) # mean of epsilon_hat
plot(x=fit, y=resids, main="resid vs y_hat")
abline(h=0)
# dept v. average for C_avg
plot(Data.noNA$dep, Data.noNA$C_avg)
lmfit_Dep.C <- lm(C_avg ~ dep, data = Data.noNA)
summary(lmfit_Dep.C)
abline(lmfit_Dep.C)
plot(Data.noNA$dep, Data.noNA$N_avg)
lmfit_Dep.N <- lm(N_avg ~ dep, data = Data.noNA)
summary(lmfit_Dep.N)
abline(lmfit_Dep.N)
plot(Data.noNA$dep, Data.noNA$P_avg)
lmfit_Dep.P <- lm(P_avg ~ dep, data = Data.noNA)
summary(lmfit_Dep.P)
abline(lmfit_Dep.P)
plot(Data.noNA$dep, Data.noNA$M_avg)
lmfit_Dep.M <- lm(M_avg ~ dep, data = Data.noNA)
summary(lmfit_Dep.M)
abline(lmfit_Dep.M)
lmfit.MR <- lm(M_avg ~ flux + dep, data = Data.noNA)
summary(lmfit.MR)
smaller <- lmfit.flux; larger <- lmfit.MR
anova(smaller, larger)
#we want to make predictions on the Mass average flux.
# we want to compare this against depth and C,N,P fluxes
# Depth is categorical
# N,P,C are numerical
library(psych) # for `pairs.panels()`
library(lattice)
ANOCOVA.data <- subset(Data.noNA, select = c("dep", "M_avg", "C_avg","N_avg","P_avg"))
as.character(ANOCOVA.data$dep) # need to make dep categorical not numerical
attach(ANOCOVA.data)
summary(ANOCOVA.data)
pairs.panels(data.frame(dep,C_avg,N_avg, P_avg, M_avg))
xyplot(M_avg ~ C_avg | dep,
main="Fig2a: Activity level-specific scatterplots"
)
xyplot(M_avg ~ C_avg, groups=dep,
auto.key=TRUE,
main="Fig2b: Scatterplot with color=group level"
)
xyplot(M_avg ~ C_avg, groups=dep,
type=c("p","r"), # `p` for _points_, `r` for _regression line_
# see https://stackoverflow.com/questions/12972039/plotting-xyplot-with-regression-line-on-lattice-graphics for more
auto.key=TRUE,
main="Fig3: Three standalone depth level-specific `lm()` fits"
)
#reformat yymmdd so that r can better use it blocking factors
# only yymmdd1 was used to create new year and month columns since yymmdd1 and yymmdd2 sampled were only a couple days apart and were averaged out in flux columns
Data.noNA$Date <- as.Date(paste(substr(Data.noNA$yymmdd1,1,4),
substr(Data.noNA$yymmdd1,5,6),
substr(Data.noNA$yymmdd1,7,8), sep = "-"),
format = '%Y-%m-%d')
Data.noNA$Year <- substr(Data.noNA$yymmdd1,1,4)
#install.packages("lubridate")
library(lubridate)
Data.noNA$month <- as.Date(paste(substr(Data.noNA$yymmdd1,5,6),
substr(Data.noNA$yymmdd1,7,8), sep = "-"),
format = '%m-%d')
Data.noNA$month <- round_date(Data.noNA$month, unit = "month")
Data.noNA$month <- format(Data.noNA$month,format = "%Y-%b-%d")
Data.noNA$month <- substr(paste(Data.noNA$month),6,8)
ANOCOVA.data <- subset(Data.noNA, select = c("dep", "M_avg", "C_avg","N_avg","P_avg", "Year", "month"))
ANOCOVA.data <- as.vector(ANOCOVA.data)
ANCOVA <- lm(log(M_avg) ~ log(C_avg) + log(N_avg) + log(P_avg) + dep + as.factor(Year) + as.factor(month),data = ANOCOVA.data)
summary(ANCOVA)
plot(ANCOVA)
resids <- resid(ANCOVA)
fit <-fitted(ANCOVA)
```{r}
# Subset each depth and rename columns
library(plyr)
C_flux.depth.150 <- subset(C_flux.data, dep == 150)
C_flux.depth.150 <- rename(C_flux.depth.150, c("dep"="dep.150"))
C_flux.depth.150 <- rename(C_flux.depth.150, c("C_avg" ="C_avg.150"))
C_flux.depth.200 <- subset(C_flux.data, dep == 200)
C_flux.depth.200 <- rename(C_flux.depth.200, c("dep"="dep.200"))
C_flux.depth.200 <- rename(C_flux.depth.200, c("C_avg" ="C_avg.200"))
C_flux.depth.300 <- subset(C_flux.data, dep == 300)
C_flux.depth.300 <- rename(C_flux.depth.300, c("dep"="dep.300"))
C_flux.depth.300 <- rename(C_flux.depth.300, c("C_avg" ="C_avg.300"))
C_flux.depth.400 <- subset(C_flux.data, dep == 400)
C_flux.depth.400 <- rename(C_flux.depth.400, c("dep"="dep.400"))
C_flux.depth.400 <- rename(C_flux.depth.400, c("C_avg" ="C_avg.400"))
```
```{r}
# Subset each depth and rename columns
library(plyr)
C_flux.depth.150 <- subset(C_flux.data, dep == 150)
C_flux.depth.150 <- rename(C_flux.depth.150, c("dep"="dep.150"))
C_flux.depth.150 <- rename(C_flux.depth.150, c("C_avg" ="C_avg.150"))
C_flux.depth.200 <- subset(C_flux.data, dep == 200)
C_flux.depth.200 <- rename(C_flux.depth.200, c("dep"="dep.200"))
C_flux.depth.200 <- rename(C_flux.depth.200, c("C_avg" ="C_avg.200"))
C_flux.depth.300 <- subset(C_flux.data, dep == 300)
C_flux.depth.300 <- rename(C_flux.depth.300, c("dep"="dep.300"))
C_flux.depth.300 <- rename(C_flux.depth.300, c("C_avg" ="C_avg.300"))
C_flux.depth.400 <- subset(C_flux.data, dep == 400)
C_flux.depth.400 <- rename(C_flux.depth.400, c("dep"="dep.400"))
C_flux.depth.400 <- rename(C_flux.depth.400, c("C_avg" ="C_avg.400"))
```
```{r}
N_flux.depth.150 <- subset(N_flux.data, dep == 150)
N_flux.depth.150 <- rename(N_flux.depth.150, c("dep"="dep.150"))
N_flux.depth.150 <- rename(N_flux.depth.150, c("N_avg" ="N_avg.150"))
N_flux.depth.200 <- subset(N_flux.data, dep == 200)
N_flux.depth.200 <- rename(N_flux.depth.200, c("dep"="dep.200"))
N_flux.depth.200 <- rename(N_flux.depth.200, c("N_avg" ="N_avg.200"))
N_flux.depth.300 <- subset(N_flux.data, dep == 300)
N_flux.depth.300 <- rename(N_flux.depth.300, c("dep"="dep.300"))
N_flux.depth.300 <- rename(N_flux.depth.300, c("N_avg" ="N_avg.300"))
N_flux.depth.400 <- subset(N_flux.data, dep == 400)
N_flux.depth.400 <- rename(N_flux.depth.400, c("dep"="dep.400"))
N_flux.depth.400 <- rename(N_flux.depth.400, c("N_avg" ="N_avg.400"))
```
dep150p <- subset(Pflux.noNAs, dep=="150") #focusing on mean of C-avg at depth 150
dep150p
```{r}
#Pflux <- bats_flux2[-which(is.na(bats_flux2$P_avg)),] #removes na from C-avg
#Pflux.noNAs <- delete.na(bats_flux2)
dep150 <- subset(C_flux.data, dep=="150") #focusing on mean of C-avg at depth 150
dep150
muCflux150 <- mean(dep150$C_avg, data=dep150)
muCflux150
s.e150 <- muCflux150 * sqrt(10)  #need to find s.e
dep200 <- subset(C_flux.data, dep=="200") #focusing on mean of C-avg at depth 200
dep200
muCflux200 <- mean(dep200$C_avg, data=dep200)
muCflux200
s.e200 <- muCflux200 * sqrt(10)
dep300 <- subset(C_flux.data, dep=="300") #focusing on mean of C-avg at depth 300
dep300
muCflux300 <- mean(dep300$C_avg, data=dep300)
muCflux300
s.e300 <- muCflux300 * sqrt(10)
dep400 <- subset(C_flux.data, dep=="400") #focusing on mean of C-avg at depth 400
dep400
muCflux400 <- mean(dep400$C_avg, data=dep400)
muCflux400
s.e400 <- muCflux400 * sqrt(10)
bar.Cflux <- data.frame(c("dep150","dep200","dep300","dep400"), c(muCflux150,muCflux200,muCflux300,muCflux400))
colnames(bar.Cflux)[1] <- "Depth"
colnames(bar.Cflux)[2] <- "C_fluxMean"
graph of C-flux
```{r}
library(ggplot2)
library(dplyr)
library(viridisLite)
Viridis_palette <- viridis(40)[seq(1,40, 2)]
xval <- bar.Cflux$Depth #character objects need quotes
yval <- bar.Cflux$`C_flux Mean`
ggplot()+geom_col(bar.Cflux, mapping=aes(x= Depth, y = C_fluxMean), color="#e9ecef", alpha=0.6,) +
xlab("Depth (m)") + ylab("Mean of C Flux(mg carbon m^-2 day^-1)") +
theme(text = element_text(family = 'serif')) +
scale_fill_manual(values = Viridis_palette)
dep150 <- subset(C_flux.data, dep=="150") #focusing on mean of C-avg at depth 150
dep150
muCflux150 <- mean(dep150$C_avg, data=dep150)
muCflux150
s.e150 <- muCflux150 * sqrt(10)  #need to find s.e
dep200 <- subset(C_flux.data, dep=="200") #focusing on mean of C-avg at depth 200
dep200
muCflux200 <- mean(dep200$C_avg, data=dep200)
muCflux200
s.e200 <- muCflux200 * sqrt(10)
dep300 <- subset(C_flux.data, dep=="300") #focusing on mean of C-avg at depth 300
dep300
muCflux300 <- mean(dep300$C_avg, data=dep300)
muCflux300
s.e300 <- muCflux300 * sqrt(10)
dep400 <- subset(C_flux.data, dep=="400") #focusing on mean of C-avg at depth 400
dep400
muCflux400 <- mean(dep400$C_avg, data=dep400)
muCflux400
s.e400 <- muCflux400 * sqrt(10)
bar.Cflux <- data.frame(c("dep150","dep200","dep300","dep400"), c(muCflux150,muCflux200,muCflux300,muCflux400))
colnames(bar.Cflux)[1] <- "Depth"
colnames(bar.Cflux)[2] <- "C_fluxMean"
library(ggplot2)
library(dplyr)
library(viridisLite)
Viridis_palette <- viridis(40)[seq(1,40, 2)]
xval <- bar.Cflux$Depth #character objects need quotes
yval <- bar.Cflux$`C_flux Mean`
ggplot()+geom_col(bar.Cflux, mapping=aes(x= Depth, y = C_fluxMean), color="#e9ecef", alpha=0.6,) +
xlab("Depth (m)") + ylab("Mean of C Flux(mg carbon m^-2 day^-1)") +
theme(text = element_text(family = 'serif')) +
scale_fill_manual(values = Viridis_palette)
setwd("~/Documents/VIMS/Fall_2020/STATS/STATS-Project")
dep150p <- subset(P_flux.data, dep=="150") #focusing on mean of P-avg at depth 150
dep150p
muPflux150 <- mean(dep150p$P_avg, data=dep150p)
muPflux150
s.e150p <- muPflux150 * sqrt(10)  #need to find s.e
dep200p <- subset(P_flux.data, dep=="200") #focusing on mean of P-avg at depth 200
dep200p
muPflux200 <- mean(dep200p$P_avg, data=dep200p)
muPflux200
s.e200p <- muPflux200 * sqrt(10)
dep300p <- subset(P_flux.data, dep=="300") #focusing on mean of P-avg at depth 300
dep300p
muPflux300 <- mean(dep300p$P_avg, data=dep300p)
muPflux300
s.e300p <- muPflux300 * sqrt(10)
bar.Pflux <- data.frame(c("dep150","dep200","dep300"), c(muPflux150,muPflux200,muPflux300))
colnames(bar.Pflux)[1] <- "Depth"
colnames(bar.Pflux)[2] <- "P_fluxMean"
library(ggplot2)
library(dplyr)
library(viridisLite)
Viridis_palette <- viridis(40)[seq(1,40, 2)]
xval <- bar.Pflux$Depth #character objects need quotes
yval <- bar.Pflux$`P_flux Mean`
ggplot()+geom_col(bar.Pflux, mapping=aes(x= Depth, y = P_fluxMean), color="#e9ecef", alpha=0.6,) +
xlab("Depth (m)") + ylab("Mean of P Flux(mg phospohorous m^-2 day^-1)") +
theme(text = element_text(family = 'serif')) +
scale_fill_manual(values = Viridis_palette)
dep150n <- subset(N_flux.data, dep=="150") #focusing on mean of N-avg at depth 150
dep150n
muNflux150 <- mean(dep150n$N_avg, data=dep150n)
muNflux150
s.e150n <- muNflux150 * sqrt(10)  #need to find s.e
dep200n <- subset(N_flux.data, dep=="200") #focusing on mean of N-avg at depth 200
dep200n
muNflux200 <- mean(dep200n$N_avg, data=dep200n)
muNflux200
s.e200n <- muNflux200 * sqrt(10)
dep300n <- subset(N_flux.data, dep=="300") #focusing on mean of N-avg at depth 300
dep300n
muNflux300 <- mean(dep300n$N_avg, data=dep300n)
muNflux300
s.e300n <- muNflux300 * sqrt(10)
dep400n <- subset(N_flux.data, dep=="400") #focusing on mean of N-avg at depth 400
dep400n
muNflux400 <- mean(dep400n$N_avg, data=dep400n)
muNflux400
s.e400n <- muNflux400 * sqrt(10)
bar.Nflux <- data.frame(c("dep150","dep200","dep300","dep400"), c(muNflux150,muNflux200,muNflux300,muNflux400))
colnames(bar.Nflux)[1] <- "Depth"
colnames(bar.Nflux)[2] <- "N_fluxMean"
library(ggplot2)
library(dplyr)
library(viridisLite)
Viridis_palette <- viridis(40)[seq(1,40, 2)]
xval <- bar.Nflux$Depth #character objects need quotes
yval <- bar.Nflux$`N_flux Mean`
ggplot()+geom_col(bar.Nflux, mapping=aes(x= Depth, y = N_fluxMean), color="#e9ecef", alpha=0.6,) +
xlab("Depth (m)") + ylab("Mean of N Flux(mg nitrogen m^-2 day^-1)") +
theme(text = element_text(family = 'serif')) +
scale_fill_manual(values = Viridis_palette)
dep150m <- subset(M_flux.data,dep=="150") #focusing on mean of C-avg at depth 150
dep150m
muMflux150 <- mean(dep150m$M_avg, data=dep150m)
muMflux150
s.e150m <- muMflux150 * sqrt(10)  #need to find s.e
dep200m <- subset(M_flux.data, dep=="200") #focusing on mean of C-avg at depth 200
dep200m
muMflux200 <- mean(dep200m$M_avg, data=dep200m)
muMflux200
s.e200m <- muMflux200 * sqrt(10)
dep300m <- subset(M_flux.data, dep=="300") #focusing on mean of C-avg at depth 300
dep300m
muMflux300 <- mean(dep300m$M_avg, data=dep300m)
muMflux300
s.e300m <- muMflux300 * sqrt(10)
dep400m <- subset(M_flux.data, dep=="400") #focusing on mean of C-avg at depth 400
dep400m
muMflux400 <- mean(dep400m$M_avg, data=dep400m)
muMflux400
s.e400m <- muMflux400 * sqrt(10)
bar.Mflux <- data.frame(c("dep150","dep200","dep300","dep400"), c(muMflux150,muMflux200,muMflux300,muMflux400))
colnames(bar.Mflux)[1] <- "Depth"
colnames(bar.Mflux)[2] <- "M_fluxMean"
library(ggplot2)
library(dplyr)
library(viridisLite)
Viridis_palette <- viridis(40)[seq(1,40, 2)]
xval <- bar.Mflux$Depth #character objects need quotes
yval <- bar.Mflux$`M_flux Mean`
ggplot()+geom_col(bar.Mflux, mapping=aes(x= Depth, y = M_fluxMean), color="#e9ecef", alpha=0.6,) +
xlab("Depth (m)") + ylab("Mean of M Flux(mg mass m^-2 day^-1)") +
theme(text = element_text(family = 'serif')) +
scale_fill_manual(values = Viridis_palette)
