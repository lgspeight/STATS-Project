setwd("~/VIMS classes/Stats/STATS-Project")
read.csv(C:\Usersweath\Documents\VIMS classes\Stats\STATS-Project\waterqualitychesbay.csv)
data <- read.csv("waterqualitychesbay.csv")
View(data)
bats_flux <- read.csv("bats_flux.csv")
delete.na <- function(DF, n=0) {
DF[rowSums(is.na(DF)) <= n,]
} #Function that takes rows out that contains NAs
bats_flux.noNA <- delete.na(bats_flux) # Take out rows containing NAs
Data <- subset(bats_flux,select = c("cr","dep","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2","M_avg","C_avg","N_avg","P_avg"))
Data.noNA <- delete.na(Data)
#Data_noNA <- write.csv(x= Data.noNA,file = "Data_noNA.csv")
#we want to make predictions on the Mass average flux.
# we want to compare this against depth and C,N,P fluxes
# Depth is categorical
# N,P,C are numerical
library(psych) # for `pairs.panels()`
library(lattice)
ANOCOVA.data <- subset(Data.noNA, select = c("dep", "M_avg", "C_avg","N_avg","P_avg"))
as.character(ANOCOVA.data$dep) # need to make dep categorical not numerical
attach(ANOCOVA.data)
summary(ANOCOVA.data)
pairs.panels(data.frame(dep,C_avg,N_avg, P_avg, M_avg))
xyplot(M_avg ~ C_avg | dep,
main="Fig2a: Activity level-specific scatterplots"
)
xyplot(M_avg ~ C_avg, groups=dep,
auto.key=TRUE,
main="Fig2b: Scatterplot with color=group level"
)
xyplot(M_avg ~ C_avg, groups=dep,
type=c("p","r"), # `p` for _points_, `r` for _regression line_
# see https://stackoverflow.com/questions/12972039/plotting-xyplot-with-regression-line-on-lattice-graphics for more
auto.key=TRUE,
main="Fig3: Three standalone depth level-specific `lm()` fits"
)
# this code is to specify the depth I want to look at that contains the rows and the columns
Study_depths <- c("150", "200", "300", "400" ) #vector of depths I want to retain
Study_Rows <- which(bats_flux$dep %in% Study_depths) #which() to ask R which rows in spp name are on the list
bats_flux2 <- bats_flux[Study_Rows,] #has all the rows we want as well as all the columns
#Cflux <- bats_flux2[-which(is.na(bats_flux2$C_avg)),] #removes na from C-avg
#Cflux.noNAs <- delete.na(bats_flux2)
#levels(as.factor(Cflux.noNAs$dep150)) #this looks at the distribution of toxins in the organism selected
dep150 <- subset(C_flux.data, dep=="150") #focusing on mean of C-avg at depth 150
# separate each flux into its own dataframe
# delete rows that contain NAs
C_flux.data <- delete.na(subset(Data,select = c("cr","dep","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2","C_avg")))
N_flux.data <- delete.na(subset(Data,select = c("cr","dep","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2","N_avg")))
P_flux.data <- delete.na(subset(Data,select = c("cr","dep","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2","P_avg")))
M_flux.data <- delete.na(subset(Data,select = c("cr","dep","yymmdd1","yymmdd2","Lat2","Lat2.1","Long1","Long2","M_avg")))
# Subset each depth and rename columns
library(plyr)
#Cflux <- bats_flux2[-which(is.na(bats_flux2$C_avg)),] #removes na from C-avg
#Cflux.noNAs <- delete.na(bats_flux2)
#levels(as.factor(Cflux.noNAs$dep150)) #this looks at the distribution of toxins in the organism selected
dep150 <- subset(C_flux.data, dep=="150") #focusing on mean of C-avg at depth 150
dep150
muCflux150 <- mean(dep150$C_avg, data=dep150)
muCflux150
s.e150 <- muCflux150 * sqrt(10)  #need to find s.e
dep200 <- subset(C_flux.data, dep=="200") #focusing on mean of C-avg at depth 200
dep200
muCflux200 <- mean(dep200$C_avg, data=dep200)
muCflux200
s.e200 <- muCflux200 * sqrt(10)
dep300 <- subset(C_flux.data, dep=="300") #focusing on mean of C-avg at depth 300
dep300
muCflux300 <- mean(dep300$C_avg, data=dep300)
muCflux300
s.e300 <- muCflux300 * sqrt(10)
dep400 <- subset(C_flux.data, dep=="400") #focusing on mean of C-avg at depth 400
dep400
muCflux400 <- mean(dep400$C_avg, data=dep400)
muCflux400
s.e400 <- muCflux400 * sqrt(10)
bar.Cflux <- data.frame(c("dep150","dep200","dep300","dep400"), c(muCflux150,muCflux200,muCflux300,muCflux400))
colnames(bar.Cflux)[1] <- "Depth"
colnames(bar.Cflux)[2] <- "C_fluxMean"
library(ggplot2)
library(dplyr)
library(viridisLite)
Viridis_palette <- viridis(40)[seq(1,40, 2)]
xval <- bar.Cflux$Depth #character objects need quotes
yval <- bar.Cflux$`C_flux Mean`
ggplot()+geom_col(bar.Cflux, mapping=aes(x= Depth, y = C_fluxMean), color="#e9ecef", alpha=0.6,)
# Back in `geom_histogram()`, this sets                                                                              border color, and transparency
#xlab("Log-transformed Toxin concentrations (PPB WT)")+                 # Add our nice and pretty x-label
# labs(fill = "PCB") +                                          # This adds the legend title
# theme(text = element_text(family = 'serif'))+                       # This plots the text in Times New Roman Font
# scale_fill_manual(values = Viridis_palette)+                        # Add your color palette
# Finally, `facet_grid()` will make small sub-plots based on a grouping variable want to split the data by. Think of it as subsetting, but without all the work!
# facet_wrap(~bar.Cflux)
library(ggplot2)
library(dplyr)
library(viridisLite)
Viridis_palette <- viridis(40)[seq(1,40, 2)]
xval <- bar.Cflux$Depth #character objects need quotes
yval <- bar.Cflux$`C_flux Mean`
ggplot()+geom_col(bar.Cflux, mapping=aes(x= Depth, y = C_fluxMean), color="#e9ecef", alpha=0.6,) +
xlab("Depth (m)") + ylab("Mean of C Flux(mg carbon m^-2 day^-1") +
theme(text = element_text(family = 'serif')) +
scale_fill_manual(values = Viridis_palette)
library(ggplot2)
library(dplyr)
library(viridisLite)
Viridis_palette <- viridis(40)[seq(1,40, 2)]
xval <- bar.Cflux$Depth #character objects need quotes
yval <- bar.Cflux$`C_flux Mean`
ggplot()+geom_col(bar.Cflux, mapping=aes(x= Depth, y = C_fluxMean), color="#e9ecef", alpha=0.6,) +
xlab("Depth (m)") + ylab("Mean of C Flux(mg carbon m^-2 day^-1)") +
theme(text = element_text(family = 'serif')) +
scale_fill_manual(values = Viridis_palette)
library(ggplot2)
library(dplyr)
library(viridisLite)
Viridis_palette <- viridis(40)[seq(1,40, 2)]
xval <- bar.Pflux$Depth #character objects need quotes
Pflux <- bats_flux2[-which(is.na(bats_flux2$P_avg)),] #removes na from C-avg
Pflux.noNAs <- delete.na(bats_flux2)
levels(as.factor(Pflux.noNAs$dep150p)) #this looks at the distribution of toxins in the organism selected
dep150p <- subset(Pflux.noNAs, dep=="150") #focusing on mean of C-avg at depth 150
dep150p
muPflux150 <- mean(dep150p$P_avg, data=dep150p)
muPflux150
s.e150p <- muPflux150 * sqrt(10)  #need to find s.e
dep200p <- subset(Pflux.noNAs, dep=="200") #focusing on mean of C-avg at depth 200
dep200p
muPflux200 <- mean(dep200p$P_avg, data=dep200p)
muPflux200
s.e200p <- muPflux200 * sqrt(10)
dep300p <- subset(Pflux.noNAs, dep=="300") #focusing on mean of C-avg at depth 300
dep300p
muPflux300 <- mean(dep300p$P_avg, data=dep300p)
muPflux300
s.e300p <- muPflux300 * sqrt(10)
dep400p <- subset(Pflux.noNAs, dep=="400") #focusing on mean of C-avg at depth 400
dep400p
muPflux400 <- mean(dep400p$P_avg, data=dep400p)
muPflux400
s.e400p <- muPflux400 * sqrt(10)
library(ggplot2)
library(dplyr)
library(viridisLite)
Viridis_palette <- viridis(40)[seq(1,40, 2)]
xval <- bar.Pflux$Depth #character objects need quotes
Pflux <- bats_flux2[-which(is.na(bats_flux2$P_avg)),] #removes na from C-avg
Pflux.noNAs <- delete.na(bats_flux2)
levels(as.factor(Pflux.noNAs$dep150p)) #this looks at the distribution of toxins in the organism selected
dep150p <- subset(Pflux.noNAs, dep=="150") #focusing on mean of C-avg at depth 150
dep150p
muPflux150 <- mean(dep150p$P_avg, data=dep150p)
muPflux150
s.e150p <- muPflux150 * sqrt(10)  #need to find s.e
dep200p <- subset(Pflux.noNAs, dep=="200") #focusing on mean of C-avg at depth 200
dep200p
muPflux200 <- mean(dep200p$P_avg, data=dep200p)
muPflux200
s.e200p <- muPflux200 * sqrt(10)
dep300p <- subset(Pflux.noNAs, dep=="300") #focusing on mean of C-avg at depth 300
dep300p
muPflux300 <- mean(dep300p$P_avg, data=dep300p)
muPflux300
s.e300p <- muPflux300 * sqrt(10)
dep400p <- subset(Pflux.noNAs, dep=="400") #focusing on mean of C-avg at depth 400
dep400p
muPflux400 <- mean(dep400p$P_avg, data=dep400p)
muPflux400
s.e400p <- muPflux400 * sqrt(10)
bar.Pflux <- data.frame(c("dep150","dep200","dep300","dep400"), c(muPflux150,muPflux200,muPflux300,muPflux400))
colnames(bar.Pflux)[1] <- "Depth"
colnames(bar.Pflux)[2] <- "P_fluxMean"
library(ggplot2)
library(dplyr)
library(viridisLite)
Viridis_palette <- viridis(40)[seq(1,40, 2)]
xval <- bar.Pflux$Depth #character objects need quotes
yval <- bar.Pflux$`P_flux Mean`
ggplot()+geom_col(bar.Pflux, mapping=aes(x= Depth, y = P_fluxMean), color="#e9ecef", alpha=0.6,) +
xlab("Depth (m)") + ylab("Mean of P Flux(mg phospohorous m^-2 day^-1)") +
theme(text = element_text(family = 'serif')) +
scale_fill_manual(values = Viridis_palette)
summary(Cflux.noNAs$dep400)
Nflux <- bats_flux2[-which(is.na(bats_flux2$P_avg)),] #removes na from C-avg
Nflux.noNAs <- delete.na(bats_flux2)
levels(as.factor(Nflux.noNAs$dep150n)) #this looks at the distribution of toxins in the organism selected
dep150n <- subset(Nflux.noNAs, dep=="150") #focusing on mean of C-avg at depth 150
dep150n
muNflux150 <- mean(dep150n$N_avg, data=dep150n)
muNflux150
s.e150n <- muNflux150 * sqrt(10)  #need to find s.e
dep200n <- subset(Nflux.noNAs, dep=="200") #focusing on mean of C-avg at depth 200
dep200n
muNflux200 <- mean(dep200n$N_avg, data=dep200n)
muNflux200
s.e200n <- muNflux200 * sqrt(10)
dep300n <- subset(Nflux.noNAs, dep=="300") #focusing on mean of C-avg at depth 300
dep300n
muNflux300 <- mean(dep300n$N_avg, data=dep300n)
muNflux300
s.e300n <- muNflux300 * sqrt(10)
dep400n <- subset(Nflux.noNAs, dep=="400") #focusing on mean of C-avg at depth 400
dep400n
muNflux400 <- mean(dep400n$N_avg, data=dep400n)
muNflux400
s.e400n <- muNflux400 * sqrt(10)
bar.Nflux <- data.frame(c("dep150","dep200","dep300","dep400"), c(muNflux150,muNflux200,muNflux300,muNflux400))
colnames(bar.Nflux)[1] <- "Depth"
colnames(bar.Nflux)[2] <- "N_fluxMean"
library(ggplot2)
library(dplyr)
library(viridisLite)
Viridis_palette <- viridis(40)[seq(1,40, 2)]
xval <- bar.Nflux$Depth #character objects need quotes
yval <- bar.Nflux$`N_flux Mean`
ggplot()+geom_col(bar.Nflux, mapping=aes(x= Depth, y = N_fluxMean), color="#e9ecef", alpha=0.6,) +
xlab("Depth (m)") + ylab("Mean of N Flux(mg nitrogen m^-2 day^-1)") +
theme(text = element_text(family = 'serif')) +
scale_fill_manual(values = Viridis_palette)
#Mflux <- bats_flux2[-which(is.na(bats_flux2$P_avg)),] #removes na from C-avg
#Mflux.noNAs <- delete.na(bats_flux2)
#levels(as.factor(Mflux.noNAs$dep150n)) #this looks at the distribution of toxins in the organism selected
dep150m <- subset(C_flux.data,dep=="150") #focusing on mean of C-avg at depth 150
dep150m
muMflux150 <- mean(dep150m$M_avg, data=dep150m)
muMflux150
s.e150m <- muMflux150 * sqrt(10)  #need to find s.e
dep200m <- subset(C_flux.data, dep=="200") #focusing on mean of C-avg at depth 200
dep200m
muMflux200 <- mean(dep200m$M_avg, data=dep200m)
muMflux200
s.e200m <- muMflux200 * sqrt(10)
dep300m <- subset(Mflux.noNAs, dep=="300") #focusing on mean of C-avg at depth 300
library(faraway)
help(gala)
lmfit <- lm( Species ~ Endemics + Elevation + Nearest + Scruz,
data=gala)
resids <- resid( lmfit ) # extract epsilon_hats
fit <- fitted ( lmfit ) # extract y_hats
View(lmfit)
par(mfrow=c(1,2))
hist(resids, breaks=20)
qqnorm(resids)
qqline(resids) # add straight line from true normal
plot(resids, main="resid vs i")
abline(h=0) # mean of epsilon_hat
plot(x=fit, y=resids, main="resid vs y_hat")
abline(h=0)
View(bats_flux.noNA)
lmfit <- lm( M_avg ~ C_avg + P-avg + N_avg,
data=bats_flux.noNA)
lmfit <- lm( M_avg ~ C_avg + P_avg + N_avg,
data=bats_flux.noNA)
resids <- resid( lmfit ) # extract epsilon_hats
fit <- fitted ( lmfit ) # extract y_hats
lmfit <- lm( M_avg ~ C_avg + P_avg + N_avg,
data=bats_flux.noNA)
resids <- resid( lmfit ) # extract epsilon_hats
fit <- fitted ( lmfit ) # extract y_hats
par(mfrow=c(1,2))
hist(resids, breaks=20)
qqnorm(resids)
qqline(resids) # add straight line from true normal
plot(resids, main="resid vs i")
abline(h=0) # mean of epsilon_hat
plot(x=fit, y=resids, main="resid vs y_hat")
abline(h=0)
lmfit <- lm( M_avg ~ C_avg + P_avg + N_avg,
data=bats_flux.noNA)
resids <- resid( lmfit ) # extract epsilon_hats
fit <- fitted ( lmfit ) # extract y_hats
par(mfrow=c(1,2))
hist(resids, breaks=20)
qqnorm(resids)
qqline(resids) # add straight line from true normal
plot(resids, main="resid vs i")
abline(h=0) # mean of epsilon_hat
plot(x=fit, y=resids, main="resid vs y_hat")
abline(h=0)
summary(lm.fit)
lmfit <- lm( M_avg ~ C_avg + P_avg + N_avg,
data=bats_flux.noNA)
resids <- resid( lmfit ) # extract epsilon_hats
fit <- fitted ( lmfit ) # extract y_hats
par(mfrow=c(1,2))
hist(resids, breaks=20)
qqnorm(resids)
qqline(resids) # add straight line from true normal
plot(resids, main="resid vs i")
abline(h=0) # mean of epsilon_hat
plot(x=fit, y=resids, main="resid vs y_hat")
abline(h=0)
summary(lmfit)
library(psych)
plot(bats_flux.noNA)
library(psych)
plot(Nflux.noNAs)
#Pflux <- bats_flux2[-which(is.na(bats_flux2$P_avg)),] #removes na from C-avg
#Pflux.noNAs <- delete.na(bats_flux2)
#levels(as.factor(Pflux.noNAs$dep150p)) #this looks at the distribution of toxins in the organism selected
dep150p <- subset(Pflux.noNAs, dep=="150") #focusing on mean of C-avg at depth 150
dep150p
muPflux150 <- mean(dep150p$P_avg, data=dep150p)
muPflux150
s.e150p <- muPflux150 * sqrt(10)  #need to find s.e
dep200p <- subset(Pflux.noNAs, dep=="200") #focusing on mean of C-avg at depth 200
dep200p
muPflux200 <- mean(dep200p$P_avg, data=dep200p)
muPflux200
s.e200p <- muPflux200 * sqrt(10)
dep300p <- subset(Pflux.noNAs, dep=="300") #focusing on mean of C-avg at depth 300
dep300p
muPflux300 <- mean(dep300p$P_avg, data=dep300p)
muPflux300
s.e300p <- muPflux300 * sqrt(10)
dep400p <- subset(Pflux.noNAs, dep=="400") #focusing on mean of C-avg at depth 400
dep400p
muPflux400 <- mean(dep400p$P_avg, data=dep400p)
muPflux400
s.e400p <- muPflux400 * sqrt(10)
bar.Pflux <- data.frame(c("dep150","dep200","dep300","dep400"), c(muPflux150,muPflux200,muPflux300,muPflux400))
colnames(bar.Pflux)[1] <- "Depth"
colnames(bar.Pflux)[2] <- "P_fluxMean"
library(ggplot2)
library(dplyr)
library(viridisLite)
Viridis_palette <- viridis(40)[seq(1,40, 2)]
xval <- bar.Pflux$Depth #character objects need quotes
yval <- bar.Pflux$`P_flux Mean`
ggplot()+geom_col(bar.Pflux, mapping=aes(x= Depth, y = P_fluxMean), color="#e9ecef", alpha=0.6,) +
xlab("Depth (m)") + ylab("Mean of P Flux(mg phospohorous m^-2 day^-1)") +
theme(text = element_text(family = 'serif')) +
scale_fill_manual(values = Viridis_palette)
#Nflux <- bats_flux2[-which(is.na(bats_flux2$P_avg)),] #removes na from C-avg
#Nflux.noNAs <- delete.na(bats_flux2)
#levels(as.factor(Nflux.noNAs$dep150n)) #this looks at the distribution of toxins in the organism selected
dep150n <- subset(Nflux.noNAs, dep=="150") #focusing on mean of C-avg at depth 150
dep150n
muNflux150 <- mean(dep150n$N_avg, data=dep150n)
muNflux150
s.e150n <- muNflux150 * sqrt(10)  #need to find s.e
dep200n <- subset(Nflux.noNAs, dep=="200") #focusing on mean of C-avg at depth 200
dep200n
muNflux200 <- mean(dep200n$N_avg, data=dep200n)
muNflux200
s.e200n <- muNflux200 * sqrt(10)
dep300n <- subset(Nflux.noNAs, dep=="300") #focusing on mean of C-avg at depth 300
dep300n
muNflux300 <- mean(dep300n$N_avg, data=dep300n)
muNflux300
s.e300n <- muNflux300 * sqrt(10)
dep400n <- subset(Nflux.noNAs, dep=="400") #focusing on mean of C-avg at depth 400
dep400n
muNflux400 <- mean(dep400n$N_avg, data=dep400n)
muNflux400
s.e400n <- muNflux400 * sqrt(10)
bar.Nflux <- data.frame(c("dep150","dep200","dep300","dep400"), c(muNflux150,muNflux200,muNflux300,muNflux400))
colnames(bar.Nflux)[1] <- "Depth"
colnames(bar.Nflux)[2] <- "N_fluxMean"
library(ggplot2)
library(dplyr)
library(viridisLite)
Viridis_palette <- viridis(40)[seq(1,40, 2)]
xval <- bar.Nflux$Depth #character objects need quotes
yval <- bar.Nflux$`N_flux Mean`
ggplot()+geom_col(bar.Nflux, mapping=aes(x= Depth, y = N_fluxMean), color="#e9ecef", alpha=0.6,) +
xlab("Depth (m)") + ylab("Mean of N Flux(mg nitrogen m^-2 day^-1)") +
theme(text = element_text(family = 'serif')) +
scale_fill_manual(values = Viridis_palette)
#Mflux <- bats_flux2[-which(is.na(bats_flux2$P_avg)),] #removes na from C-avg
#Mflux.noNAs <- delete.na(bats_flux2)
#levels(as.factor(Mflux.noNAs$dep150n)) #this looks at the distribution of toxins in the organism selected
dep150m <- subset(C_flux.data,dep=="150") #focusing on mean of C-avg at depth 150
dep150m
muMflux150 <- mean(dep150m$M_avg, data=dep150m)
muMflux150
s.e150m <- muMflux150 * sqrt(10)  #need to find s.e
dep200m <- subset(C_flux.data, dep=="200") #focusing on mean of C-avg at depth 200
dep200m
muMflux200 <- mean(dep200m$M_avg, data=dep200m)
muMflux200
s.e200m <- muMflux200 * sqrt(10)
dep300m <- subset(Mflux.noNAs, dep=="300") #focusing on mean of C-avg at depth 300
#xaxis <- c("dep150","dep200","dep300","dep400")
#yaxis < - c(muMflux150,muMflux200,muMflux300,muMflux400)
predict <- plot(bats_flux.noNA$dep, bats_flux.noNA$C_avg)
xaxis <- c("dep150","dep200","dep300","dep400")
yaxis < - c(muMflux150,muMflux200,muMflux300,muMflux400)
# dept v. average
predict <- plot(bats_flux.noNA$dep, bats_flux.noNA$C_avg)
